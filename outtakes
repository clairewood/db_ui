AJAX METHOD FOR POSTING -- removed from app.js

// POST
app.post('/add-item-ajax', function(req, res) 
    {
        // Capture the incoming data and parse it back to a JS object
        let data = req.body;
    
        // Capture NULL values for ints
        let qty_on_hand = parseInt(data.qty_on_hand);
        if (isNaN(qty_on_hand))
        {
            qty_on_hand = 'NULL'
        }
        let price = parseInt(data.price);
        if (isNaN(price))
        {
            price = 'NULL'
        }
        let supplier_id = parseInt(data.supplier_id);
        if (isNaN(supplier_id))
        {
            supplier_id = 'NULL'
        }
        let in_stock = parseInt(data.in_stock);
        if (isNaN(in_stock))
        {
            in_stock = 'NULL'
        }
    
        // Create the query and run it on the database
        query1 = `INSERT INTO Items (supplier_id, material_id, color_id, in_stock, qty_on_hand, price) VALUES (${data.supplier_id}, ${data.material_id}, ${data.color_id}, ${data.in_stock}, ${data.qty_on_hand}, ${data.price})`;
        db.pool.query(query1, function(error, rows, fields){ // CHANGED data.etc to just etc for int values above
    
            // Check to see if there was an error
            if (error) {
    
                // Log the error to the terminal so we know what went wrong, and send the visitor an HTTP response 400 indicating it was a bad request.
                console.log(error)
                res.sendStatus(400);
            }
            else
            {
                // If there was no error, perform a SELECT * on bsg_people
                query2 = `SELECT * FROM Items;`;
                db.pool.query(query2, function(error, rows, fields){
    
                    // If there was an error on the second query, send a 400
                    if (error) {
                        
                        // Log the error to the terminal so we know what went wrong, and send the visitor an HTTP response 400 indicating it was a bad request.
                        console.log(error);
                        res.sendStatus(400);
                    }
                    // If all went well, send the results of the query back.
                    else
                    {
                        res.send(rows);
                    }
                })
            }
        })
    });



AJAX METHOD FOR POSTING -- removed from index.hbs
{{!-- Form to add a record to the table using AJAX  --}}
<h2>Adding Data with AJAX</h2>
<p>To add a new Item, please enter its information below and click 'Submit'!</p>
<form id="add-item-form-ajax">
    <label for="input-supplier_id">Supplier ID: </label>
    <input type="text" name="input-supplier_id" id="input-supplier_id">
    <!-- TODO make these dropdown menus --> 
    
    <label for="input-material_id">Material ID: </label>
    <input type="text" name="input-material_id" id="input-material_id">

    <label for="input-color_id">Color ID: </label>
    <input type="text" name="input-color_id" id="input-color_id">

    <label for="input-in_stock">In stock? </label>
    <input type="text" name="input-in_stock" id="input-in_stock">

    <label for="input-qty_on_hand">Current quantity: </label>
    <input type="text" name="input_qty_on_hand" id="input_qty_on_hand">

    <label for="input-price">Price: </label>
    <input type="text" name="input-price" id="input-price">

    <input type="submit">

</form>